[tool.poetry]
name = "gaitmap-bench"
version = "0.1.0"
description = "Repo to collect reproducible benchmarks for human gait analysis"
authors = ["Arne KÃ¼derle <arne.kuederle@fau.de>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
gaitmap-challenges = {path = "../gaitmap-challenges", develop = true, extras = ["visualization"]}
matplotlib = "^3.6.3"
gaitmap-datasets = {path = "../../../private/gaitmap-datasets"}
tpcp = {path = "../../../private/tpcp"}
pomegranate = "^0.14.8"
click = "^8.1.3"
toml = "^0.10.2"
rich = "^13.3.2"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
poethepoet = "^0.16.5"
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
prospector = "^1.8.3"
toml = "^0.10.2"
isort = "^5.11.1"
ipython = "^8.8.0"
ipympl = "^0.9.2"
ipykernel = "^6.20.2"
sphinx-book-theme = "^1.0.0"
myst-nb = "^0.17.1"
sphinx-design = "^0.3.0"
myst-nb-bokeh = {git = "https://github.com/AKuederle/MyST-NB-Bokeh"}

[tool.poetry.scripts]
gaitmap-bench = "gaitmap_bench._bench_runner:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | docs
    | build
    | dist
    | \.virtual_documents
  )/
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 120
skip_gitignore = true


[tool.poe.tasks]
_format_black = "black ."
_format_isort = "isort ."
format = { sequence = ["_format_black", "_format_isort"], help = "Format all files." }
lint = { cmd = "prospector", help = "Lint all files with Prospector." }
_check_black = "black . --check"
_check_isort = "isort . --check"
check = { sequence = ["_check_black", "_check_isort", "lint"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov=gaitmap_bench --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
version = { script = "_tasks:task_update_version()" }
bump_dev = { script = "_tasks:task_bump_all_dev()" }
conf_jupyter = { cmd = "python -m ipykernel install --user --name gaitmap_bench", help = "Add a new jupyter kernel for the project." }
docs = { script = "_tasks:task_docs()" }

