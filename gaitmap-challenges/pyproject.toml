[tool.poetry]
name = "gaitmap-challenges"
version = "0.1.0"
description = "A set of benchmark challenges for IMU based human gait analysis"
authors = ["Arne KÃ¼derle <arne.kuederle@fau.de>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.8,<3.11"
pandas = ">=1.4.3"
scikit-learn = ">=1.0"
optuna = ">=3.0.0"
py-cpuinfo = "^9.0.0"
toml = "^0.10.2"
bokeh = {version = "^3.0.3", optional = true}
jupyter-bokeh = {version = "^3.0.5", optional = true}
gitpython = "^3.1.31"
gaitmap = {version = ">=2.2.0", extras = ["stats"]}
gaitmap-datasets = {git = "https://github.com/mad-lab-fau/gaitmap-datasets.git", rev = "ef8c906f4ff5f7398878ff7ff8b7c3b779370b63"}

[tool.poetry.extras]
visualization = ["bokeh"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poe.tasks]
_format_black = "black ."
_format_ruff = "ruff . --fix-only --exit-zero"
format = ["_format_black", "_format_ruff", "_format_black"]
lint = { cmd = "ruff gaitmap_challenges --fix", help = "Lint all files with ruff." }
_lint_ci = "ruff gaitmap_challenges --format=github"
_check_black = "black . --check"
ci_check = { sequence = ["_check_black", "_lint_ci"], help = "Check all potential format and linting issues." }
test = { cmd = "pytest --cov=gaitmap-challenges --cov-report=term-missing --cov-report=xml", help = "Run Pytest with coverage." }
version = { script = "_tasks:task_update_version()" }
bump_dev = { script = "_tasks:task_bump_all_dev()" }
